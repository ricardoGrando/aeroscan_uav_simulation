<launch>
  <arg name="mav_name" default="c5"/>
  <arg name="world_name" default="oil_rig"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="paused" default="true"/>
  <arg name="verbose" default="false"/>
  <arg name="mapping" default="false"/>

  <param name="mesh_path" type="str" value="$(find aeroscan_uav_simulation)/models/oil_rig/meshes/70_nao_conforme.obj" />
  <param name="cloud_path" type="str" value="$(find leica_scanstation_utils)/pointclouds/scan.pcd" />
  <param name="mapping" type="str" value="$(arg mapping)" />

  <group if="$(arg mapping)">
    <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find aeroscan_uav_simulation)/models"/>
    <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find aeroscan_uav_simulation)/models"/>
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find aeroscan_uav_simulation)/worlds/$(arg world_name).world" />
      <arg name="debug" value="$(arg debug)" />
      <arg name="paused" value="$(arg paused)" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="verbose" value="$(arg verbose)"/>
    </include>

    <group ns="$(arg mav_name)">
      <include file="$(find aeroscan_uav_simulation)/launch/spawn_mav.launch">
        <arg name="mav_name" value="$(arg mav_name)" />
        <arg name="model" value="$(find aeroscan_uav_simulation)/urdf/mav_generic_odometry_sensor.gazebo" />
        <arg name="enable_logging" value="$(arg enable_logging)" />
        <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
        <arg name="log_file" value="$(arg log_file)"/>
      </include>
      <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
        <rosparam command="load" file="$(find aeroscan_uav_simulation)/resource/lee_controller_$(arg mav_name).yaml" />
        <rosparam command="load" file="$(find aeroscan_uav_simulation)/resource/$(arg mav_name).yaml" />
        <remap from="odometry" to="odometry_sensor1/odometry" />
      </node>

      <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
      <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    </group>
  </group>

  <arg name="namespace" default="c5"/>

  <node name="laserscan_to_pointcloud" pkg="leica_gazebo_simulation" type="laserscan_to_pointcloud" ns="$(arg namespace)" output="screen"/>

  <node name="leica_service_listener" pkg="leica_gazebo_simulation" type="leica_service_listener" ns="$(arg namespace)" output="screen"/>

  <node name="move_c5_pan" pkg="leica_gazebo_simulation" type="move_c5_pan.py" output="screen"/>

  <node name="publisher_tf" pkg="leica_gazebo_simulation" type="publish_tf.py" output="screen"/>

  <!-- <node name="aeroscan_uav_simulation_node" pkg="aeroscan_uav_simulation" type="aeroscan_uav_simulation.py" output="screen"/> -->

</launch>
